/**
 * jQuery Timemachine
 * 
 * A small JS library to run JS code in the namespace of a
 * certain jQuery version.
 * 
 * @author  Koos van Egmond <flamefingers at gmail dot com>
 * @version 1.0
 **/
(function(a,d){var c=function(e,f){return new c.fn.init(e,f)},b=a.document;c.fn=c.prototype={constructor:c,validVersions:["1.2.3","1.2.6","1.3.0","1.3.1","1.3.2","1.4.0","1.4.1","1.4.2","1.4.3","1.4.4","1.5.0","1.5.1","1.5.2"],loadedVersions:{},scriptBaseUrl:"https://ajax.googleapis.com/ajax/libs/jquery/__VER__/jquery.min.js",init:function(e,f){if(e===d){return}this.loadJQuery(e,f);return this},loadJQuery:function(e,i){if(!this.isValid(e)){return}if(this.isLoaded(e)){var h=this.getVersion(e);if("function"==typeof i){i.call(h,h,h)}}else{var f=this.scriptBaseUrl.replace("__VER__",e),g=this;this.load(f,function(){var j=jQuery.noConflict(true);this.loadedVersions[this.verKeyName(e)]=j;if("function"==typeof i){i.call(j,j,j)}})}},getVersion:function(e){return this.loadedVersion[this.verKeyName(e)]},isValid:function(e){return this.inArray(e,this.validVersions)},isLoaded:function(e){return this.inArray(this.verKeyName(e),this.loadedVersions)},inArray:function(g,f){if(g===d||f===d){return false}for(var e in f){if(f[e]==g){return true}}return false},verKeyName:function(e){return e.replace(".","")},load:function(f,g){var e=b.createElement("script");e.type="text/javascript";e.async=false;e.onreadystatechange=e.onload=function(){var h=e.readyState;if(!g.done&&(!h||/loaded|complete/.test(h))){g.call(c.fn);g.done=true}};e.src=f;b.getElementsByTagName("head")[0].appendChild(e)}};c.fn.init.prototype=c.fn;a.jQueryTimemachine=a.jtm=c})(window);